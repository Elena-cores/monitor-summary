{
	"info": {
		"_postman_id": "ae2baac3-1af1-4410-b5a0-769cf09ecb8a",
		"name": "CryoEM API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23331039"
	},
	"item": [
		{
			"name": "Micrograph",
			"item": [
				{
					"name": "Listar micrografías",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has array of micrographs\", function () {\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear micrografía",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.exist.and.to.be.an('object').that.is.not.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"filename\": \"test_micrograph.png\",\r\n    \"sampling\": 1.2,\r\n    \"dose\": 0.90,\r\n    \"datetime_micro\": \"2024-11-03T13:19:44.363301Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Detalle micrografía (ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200 and response time is less than 200ms\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response schema is valid\", function () {\r",
									"  var schema = {\r",
									"    type: \"array\",  // la respuesta es una lista de objetos\r",
									"    items: {\r",
									"      type: \"object\",\r",
									"      properties: {\r",
									"        id: { type: \"number\" },\r",
									"        filename: { type: \"string\" },\r",
									"        sampling: { type: \"number\" },\r",
									"        dose: { type: \"number\" },\r",
									"        datetime_micro: { type: \"string\", format: \"date-time\" }\r",
									"      },\r",
									"      required: [\"id\", \"filename\", \"sampling\", \"dose\", \"datetime_micro\"]\r",
									"    }\r",
									"  };\r",
									"\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/4",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar micrografía (ID: 5)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the correct content-type header\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include(\"application/json\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dose\": 0.40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/5/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								"5",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar micrografía (ID: 6)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body should contain detail property\", function () {\r",
									"  const json = pm.response.json();\r",
									"  pm.expect(json).to.have.property('detail');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/6/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								"6",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CTF",
			"item": [
				{
					"name": "Listar CTFs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/ctf/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"ctf",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear CTF",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"defocusu\": 0.1244,\r\n    \"defocusv\": 0.29,\r\n    \"phaseshift\": 2.45,\r\n    \"datetime_ctf\": \"2024-06-10T13:20:44.363437Z\",\r\n    \"resolution\": 1.43,\r\n    \"psd\": \"psd_30.png\",\r\n    \"micrograph\": 21\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/ctf/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"ctf",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Detalle CTF (ID)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/ctf/2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"ctf",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar CTF (ID: 30)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"resolution\": 1.30\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/ctf/30/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"ctf",
								"30",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar CTF (ID: 151)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/ctf/151/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"ctf",
								"151",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Config",
			"item": [
				{
					"name": "Obtener configuración",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/config/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"config",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar configuración",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"maxres_min\": 0.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/config/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"config",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Seguridad",
			"item": [
				{
					"name": "Login ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// verify if token is received \r",
									"pm.test(\"Status 200 y token válido\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.access).to.exist;\r",
									"    pm.expect(response.refresh).to.exist;\r",
									"    \r",
									"    // save token in collection variable\r",
									"    pm.collectionVariables.set(\"auth_token\", response.access);\r",
									"    pm.collectionVariables.set(\"refresh_token\", response.refresh);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"ana\",\r\n  \"password\": \"Anapass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/auth/token/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"token",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar datos del usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200: Token válido\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token 92d8b7800ad215d57804e801b4c2f7b3ed84ca2c",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/auth/me/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Request sin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 401 when no token is provided\", function () {\r",
									"    pm.expect(pm.response).to.have.status(401);\r",
									"    pm.expect(pm.response.json().detail).to.eql(\"Authentication credentials were not provided.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/auth/me/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Token inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token inválido: debe devolver 401 Unauthorized\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "123BEARERTOKENINVALID",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/micrograph/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"micrograph",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for authentication and access control",
			"auth": {
				"type": "jwt",
				"jwt": [
					{
						"key": "algorithm",
						"value": "HS256",
						"type": "string"
					},
					{
						"key": "isSecretBase64Encoded",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "payload",
						"value": "{}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "headerPrefix",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "queryParamKey",
						"value": "token",
						"type": "string"
					},
					{
						"key": "header",
						"value": "{}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}